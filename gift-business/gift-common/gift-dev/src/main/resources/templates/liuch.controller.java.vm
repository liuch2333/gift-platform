package $!{package.Controller};

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import lombok.AllArgsConstructor;
import javax.validation.Valid;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import cn.hutool.core.convert.Convert;

import com.gift.tools.utils.Condition;
import com.gift.tools.apis.R;

import java.util.Map;
import org.springframework.web.bind.annotation.*;
#if($!{superEntityClass})
import org.springframework.web.bind.annotation.RequestParam;
#end
import $!{package.Entity}.$!{entity};
import $!{package.Service}.$!{table.serviceName};
#if($!{superControllerClassPackage})
import $!{superControllerClassPackage};
#end
#if(!$!{superEntityClass})
#end

/**
 * $!{table.comment} 控制器
 *
 * @author $!{author}
 * @since $!{date}
 */
@RestController
@AllArgsConstructor
@RequestMapping("#if($!{table.entityPath})/$!{table.entityPath}#end")
@Api(value = "$!{table.comment}", tags = "$!{table.comment}接口")
#if($!{superControllerClass})
public class $!{table.controllerName} extends $!{superControllerClass} {
#else
public class $!{table.controllerName} {
#end

private final $!{table.serviceName} $!{table.entityPath}Service;

/**
 * $!{table.comment}详情查询
 */
@GetMapping("/detail")
@ApiOperation(value = "$!{table.comment}详情查询", notes = "传入 $!{table.entityPath}")
public R<$!{entity}> detail($!{entity} $!{table.entityPath}) {
    $!{entity} detail = $!{table.entityPath}Service.getOne(Wrappers.query($!{table.entityPath}));
        return R.data(detail);
        }


@GetMapping("/page")
@ApiOperation(value = "$!{table.comment}分页查询", notes = "传入 $!{table.entityPath}")
public R page(Page<$!{entity}> page,@RequestParam Map<String, Object> params) {
        QueryWrapper<$!{entity}> wrapper =  Condition.getQueryWrapper(params,$!{entity}.class);
        return R.data($!{table.entityPath}Service.page(page,wrapper));
        }

@GetMapping("/list")
@ApiOperation(value = "$!{table.comment}查询", notes = "传入 $!{table.entityPath}")
public R list(@RequestParam Map<String, Object> params) {
        QueryWrapper<$!{entity}> wrapper =  Condition.getQueryWrapper(params,$!{entity}.class);
        return R.data($!{table.entityPath}Service.list(wrapper));
        }

/**
 *  $!{table.comment}新增
 */
@PostMapping("/save")
@ApiOperation(value = "$!{table.comment}新增", notes = "传入 $!{table.entityPath}")
public R save(@Valid @RequestBody $!{entity} $!{table.entityPath}) {
        return R.status($!{table.entityPath}Service.save($!{table.entityPath}));
        }

/**
 * $!{table.comment} 修改
 */
@PostMapping("/update")
@ApiOperation(value = "$!{table.comment}修改", notes = "传入 $!{table.entityPath}")
public R update(@Valid @RequestBody $!{entity} $!{table.entityPath}) {
        return R.status($!{table.entityPath}Service.updateById($!{table.entityPath}));
        }


/**
 *  $!{table.comment}删除
 */
@PostMapping("/remove")
@ApiOperation(value = "$!{table.comment}删除", notes = "传入ids")
public R remove(@ApiParam(value = "主键集合", required = true) @RequestParam String ids) {
        return R.status($!{table.entityPath}Service.removeByIds(Convert.toList(Integer.class,ids)));
        }
        }
